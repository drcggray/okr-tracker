{"ast":null,"code":"var _jsxFileName = \"/Users/georgegray/Coding Projects/okr-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals } from './utils/goalUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _goals$currentCategor, _goals$currentCategor2, _goals$currentCategor3, _goals$currentCategor4, _goals$currentCategor5, _goals$currentCategor6, _goals$currentCategor7;\n  const [goals, setGoals] = useState(loadGoals);\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useState(() => {\n    const savedDailyGoals = localStorage.getItem('dailyGoals');\n    return savedDailyGoals ? JSON.parse(savedDailyGoals) : Array(14).fill('');\n  });\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  // Dark mode state\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n  useEffect(() => {\n    localStorage.setItem('dailyGoals', JSON.stringify(dailyGoals));\n  }, [dailyGoals]);\n\n  // Dark mode effect\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n  const updateGoal = useCallback((level, index, value) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$sel, _target$quarterly$sel2, _target$quarterly$sel3;\n      const newGoals = JSON.parse(JSON.stringify(prevGoals)); // Deep clone\n      let target = newGoals[currentCategory];\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index].goal = value;\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && (_target$quarterly$sel = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel !== void 0 && _target$quarterly$sel.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index].goal = value;\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && (_target$quarterly$sel2 = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel2 !== void 0 && (_target$quarterly$sel3 = _target$quarterly$sel2.monthly[selectedMonth]) !== null && _target$quarterly$sel3 !== void 0 && _target$quarterly$sel3.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index].goal = value;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth]);\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$ind, _target$quarterly$ind2, _target$quarterly$ind3;\n      const newGoals = JSON.parse(JSON.stringify(prevGoals));\n      let target = newGoals[currentCategory];\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]].completed = !target.quarterly[indices[0]].completed;\n          }\n          break;\n        case 'monthly':\n          if ((_target$quarterly$ind = target.quarterly[indices[0]]) !== null && _target$quarterly$ind !== void 0 && _target$quarterly$ind.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].completed = !target.quarterly[indices[0]].monthly[indices[1]].completed;\n          }\n          break;\n        case 'weekly':\n          if ((_target$quarterly$ind2 = target.quarterly[indices[0]]) !== null && _target$quarterly$ind2 !== void 0 && (_target$quarterly$ind3 = _target$quarterly$ind2.monthly[indices[1]]) !== null && _target$quarterly$ind3 !== void 0 && _target$quarterly$ind3.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed = !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory]);\n  const updateDailyGoal = (index, value) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = value;\n      return newGoals;\n    });\n  };\n  const toggleDailyGoalCompletion = index => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = newGoals[index].startsWith('‚úì ') ? newGoals[index].slice(2) : '‚úì ' + newGoals[index];\n      return newGoals;\n    });\n  };\n  const clearDailyGoals = () => {\n    setDailyGoals(Array(14).fill(''));\n  };\n  const startTimer = useCallback(() => {\n    setIsTimerRunning(true);\n    setRemainingTime(selectedDuration * 60);\n  }, [selectedDuration]);\n  useEffect(() => {\n    let timer;\n    if (isTimerRunning && remainingTime > 0) {\n      timer = setInterval(() => {\n        setRemainingTime(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setIsTimerRunning(false);\n            alert(\"Time's up!\");\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    } else if (remainingTime === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [isTimerRunning, remainingTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"OKR Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        className: \"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\",\n        children: darkMode ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      categories: categories,\n      currentCategory: currentCategory,\n      setCurrentCategory: setCurrentCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(AnnualGoal, {\n        annualGoal: (_goals$currentCategor = goals[currentCategory]) === null || _goals$currentCategor === void 0 ? void 0 : _goals$currentCategor.annual,\n        updateGoal: updateGoal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuarterlyGoals, {\n        quarterlyGoals: (_goals$currentCategor2 = goals[currentCategory]) === null || _goals$currentCategor2 === void 0 ? void 0 : _goals$currentCategor2.quarterly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedQuarter: setSelectedQuarter,\n        selectedQuarter: selectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), selectedQuarter !== null && /*#__PURE__*/_jsxDEV(MonthlyGoals, {\n        monthlyGoals: (_goals$currentCategor3 = goals[currentCategory]) === null || _goals$currentCategor3 === void 0 ? void 0 : (_goals$currentCategor4 = _goals$currentCategor3.quarterly[selectedQuarter]) === null || _goals$currentCategor4 === void 0 ? void 0 : _goals$currentCategor4.monthly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedMonth: setSelectedMonth,\n        selectedMonth: selectedMonth,\n        selectedQuarter: selectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), selectedQuarter !== null && selectedMonth !== null && /*#__PURE__*/_jsxDEV(WeeklyGoals, {\n        weeklyGoals: (_goals$currentCategor5 = goals[currentCategory]) === null || _goals$currentCategor5 === void 0 ? void 0 : (_goals$currentCategor6 = _goals$currentCategor5.quarterly[selectedQuarter]) === null || _goals$currentCategor6 === void 0 ? void 0 : (_goals$currentCategor7 = _goals$currentCategor6.monthly[selectedMonth]) === null || _goals$currentCategor7 === void 0 ? void 0 : _goals$currentCategor7.weekly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedWeek: setSelectedWeek,\n        selectedQuarter: selectedQuarter,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DailyGoals, {\n        dailyGoals: dailyGoals,\n        updateDailyGoal: updateDailyGoal,\n        toggleDailyGoalCompletion: toggleDailyGoalCompletion,\n        clearDailyGoals: clearDailyGoals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkTimer, {\n      selectedDuration: selectedDuration,\n      setSelectedDuration: setSelectedDuration,\n      startTimer: startTimer,\n      isTimerRunning: isTimerRunning,\n      remainingTime: remainingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"91FJYDPgv76ZojV7SiwK9VcaoXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Categories","AnnualGoal","QuarterlyGoals","MonthlyGoals","WeeklyGoals","DailyGoals","WorkTimer","categories","loadGoals","saveGoals","jsxDEV","_jsxDEV","App","_s","_goals$currentCategor","_goals$currentCategor2","_goals$currentCategor3","_goals$currentCategor4","_goals$currentCategor5","_goals$currentCategor6","_goals$currentCategor7","goals","setGoals","currentCategory","setCurrentCategory","selectedQuarter","setSelectedQuarter","selectedMonth","setSelectedMonth","selectedWeek","setSelectedWeek","dailyGoals","setDailyGoals","savedDailyGoals","localStorage","getItem","JSON","parse","Array","fill","remainingTime","setRemainingTime","selectedDuration","setSelectedDuration","isTimerRunning","setIsTimerRunning","darkMode","setDarkMode","savedMode","setItem","stringify","document","body","classList","add","remove","toggleDarkMode","prevMode","updateGoal","level","index","value","prevGoals","_target$quarterly$sel","_target$quarterly$sel2","_target$quarterly$sel3","newGoals","target","console","error","annual","quarterly","goal","monthly","weekly","toggleCompletion","indices","_target$quarterly$ind","_target$quarterly$ind2","_target$quarterly$ind3","completed","updateDailyGoal","prev","toggleDailyGoalCompletion","startsWith","slice","clearDailyGoals","startTimer","timer","setInterval","prevTime","clearInterval","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","annualGoal","quarterlyGoals","monthlyGoals","weeklyGoals","_c","$RefreshReg$"],"sources":["/Users/georgegray/Coding Projects/okr-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals } from './utils/goalUtils';\n\nconst App = () => {\n  const [goals, setGoals] = useState(loadGoals);\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useState(() => {\n    const savedDailyGoals = localStorage.getItem('dailyGoals');\n    return savedDailyGoals ? JSON.parse(savedDailyGoals) : Array(14).fill('');\n  });\n  \n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  // Dark mode state\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n\n  useEffect(() => {\n    localStorage.setItem('dailyGoals', JSON.stringify(dailyGoals));\n  }, [dailyGoals]);\n\n  // Dark mode effect\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  const updateGoal = useCallback((level, index, value) => {\n    setGoals(prevGoals => {\n      const newGoals = JSON.parse(JSON.stringify(prevGoals)); // Deep clone\n      let target = newGoals[currentCategory];\n\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index].goal = value;\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && target.quarterly[selectedQuarter]?.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index].goal = value;\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && \n              target.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index].goal = value;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth]);\n\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      const newGoals = JSON.parse(JSON.stringify(prevGoals));\n      let target = newGoals[currentCategory];\n\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]].completed = !target.quarterly[indices[0]].completed;\n          }\n          break;\n        case 'monthly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].completed = !target.quarterly[indices[0]].monthly[indices[1]].completed;\n          }\n          break;\n        case 'weekly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]?.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed = !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory]);\n\n  const updateDailyGoal = (index, value) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = value;\n      return newGoals;\n    });\n  };\n\n  const toggleDailyGoalCompletion = (index) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = newGoals[index].startsWith('‚úì ') ? newGoals[index].slice(2) : '‚úì ' + newGoals[index];\n      return newGoals;\n    });\n  };\n\n  const clearDailyGoals = () => {\n    setDailyGoals(Array(14).fill(''));\n  };\n\n  const startTimer = useCallback(() => {\n    setIsTimerRunning(true);\n    setRemainingTime(selectedDuration * 60);\n  }, [selectedDuration]);\n\n  useEffect(() => {\n    let timer;\n    if (isTimerRunning && remainingTime > 0) {\n      timer = setInterval(() => {\n        setRemainingTime(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setIsTimerRunning(false);\n            alert(\"Time's up!\");\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    } else if (remainingTime === 0) {\n      setIsTimerRunning(false);\n    }\n\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [isTimerRunning, remainingTime]);\n\n  return (\n    <div className={`container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-3xl font-bold\">OKR Tracker</h1>\n        <button\n          onClick={toggleDarkMode}\n          className=\"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\"\n        >\n          {darkMode ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode'}\n        </button>\n      </div>\n      \n      <Categories\n        categories={categories}\n        currentCategory={currentCategory}\n        setCurrentCategory={setCurrentCategory}\n      />\n      \n      <div className=\"mt-4\">\n        <AnnualGoal\n          annualGoal={goals[currentCategory]?.annual}\n          updateGoal={updateGoal}\n        />\n        <QuarterlyGoals\n          quarterlyGoals={goals[currentCategory]?.quarterly}\n          updateGoal={updateGoal}\n          toggleCompletion={toggleCompletion}\n          setSelectedQuarter={setSelectedQuarter}\n          selectedQuarter={selectedQuarter}\n        />\n        {selectedQuarter !== null && (\n          <MonthlyGoals\n            monthlyGoals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly}\n            updateGoal={updateGoal}\n            toggleCompletion={toggleCompletion}\n            setSelectedMonth={setSelectedMonth}\n            selectedMonth={selectedMonth}\n            selectedQuarter={selectedQuarter}\n          />\n        )}\n        {selectedQuarter !== null && selectedMonth !== null && (\n          <WeeklyGoals\n            weeklyGoals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly}\n            updateGoal={updateGoal}\n            toggleCompletion={toggleCompletion}\n            setSelectedWeek={setSelectedWeek}\n            selectedQuarter={selectedQuarter}\n            selectedMonth={selectedMonth}\n          />\n        )}\n        <DailyGoals\n          dailyGoals={dailyGoals}\n          updateDailyGoal={updateDailyGoal}\n          toggleDailyGoalCompletion={toggleDailyGoalCompletion}\n          clearDailyGoals={clearDailyGoals}\n        />\n      </div>\n\n      <WorkTimer\n        selectedDuration={selectedDuration}\n        setSelectedDuration={setSelectedDuration}\n        startTimer={startTimer}\n        isTimerRunning={isTimerRunning}\n        remainingTime={remainingTime}\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}