{"ast":null,"code":"import{useEffect}from'react';import useLocalStorage from'./useLocalStorage';function useDarkMode(){const[darkMode,setDarkMode]=useLocalStorage('darkMode',false);useEffect(()=>{if(darkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[darkMode]);const toggleDarkMode=()=>setDarkMode(prevMode=>!prevMode);return[darkMode,toggleDarkMode];}export default useDarkMode;","map":{"version":3,"names":["useEffect","useLocalStorage","useDarkMode","darkMode","setDarkMode","document","body","classList","add","remove","toggleDarkMode","prevMode"],"sources":["/Users/georgegray/Coding Projects/okr-tracker/src/hooks/useDarkMode.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useLocalStorage from './useLocalStorage';\n\nfunction useDarkMode() {\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  const toggleDarkMode = () => setDarkMode(prevMode => !prevMode);\n\n  return [darkMode, toggleDarkMode];\n}\n\nexport default useDarkMode;"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAE/C,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGH,eAAe,CAAC,UAAU,CAAE,KAAK,CAAC,CAElED,SAAS,CAAC,IAAM,CACd,GAAIG,QAAQ,CAAE,CACZE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAAE,CAACN,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAO,cAAc,CAAGA,CAAA,GAAMN,WAAW,CAACO,QAAQ,EAAI,CAACA,QAAQ,CAAC,CAE/D,MAAO,CAACR,QAAQ,CAAEO,cAAc,CAAC,CACnC,CAEA,cAAe,CAAAR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}