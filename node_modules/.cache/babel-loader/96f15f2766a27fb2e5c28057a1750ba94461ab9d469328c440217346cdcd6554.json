{"ast":null,"code":"var _jsxFileName = \"/Users/georgegray/Coding Projects/okr-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals, initializeGoals } from './utils/goalUtils';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport useDarkMode from './hooks/useDarkMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [goals, setGoals] = useLocalStorage('goals', initializeGoals());\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useLocalStorage('dailyGoals', Array(14).fill(''));\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [darkMode, toggleDarkMode] = useDarkMode();\n  useEffect(() => {\n    const loadedGoals = loadGoals();\n    setGoals(loadedGoals);\n  }, [setGoals]);\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n  const updateGoal = useCallback((level, index, value, dayIndex, goalIndex) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$sel, _target$quarterly$sel2, _target$quarterly$sel3, _target$quarterly$sel4, _target$quarterly$sel5, _target$quarterly$sel6;\n      const newGoals = {\n        ...prevGoals\n      };\n      let target = newGoals[currentCategory];\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index] = {\n              ...target.quarterly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && (_target$quarterly$sel = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel !== void 0 && _target$quarterly$sel.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && (_target$quarterly$sel2 = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel2 !== void 0 && (_target$quarterly$sel3 = _target$quarterly$sel2.monthly[selectedMonth]) !== null && _target$quarterly$sel3 !== void 0 && _target$quarterly$sel3.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'daily':\n          if (selectedQuarter !== null && selectedMonth !== null && selectedWeek !== null && (_target$quarterly$sel4 = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel4 !== void 0 && (_target$quarterly$sel5 = _target$quarterly$sel4.monthly[selectedMonth]) !== null && _target$quarterly$sel5 !== void 0 && (_target$quarterly$sel6 = _target$quarterly$sel5.weekly[selectedWeek]) !== null && _target$quarterly$sel6 !== void 0 && _target$quarterly$sel6.dailyGoals[dayIndex]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[selectedWeek].dailyGoals[dayIndex][goalIndex] = value;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth, selectedWeek, setGoals]);\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$ind, _target$quarterly$ind2, _target$quarterly$ind3, _target$quarterly$ind4, _target$quarterly$ind5, _target$quarterly$ind6;\n      const newGoals = {\n        ...prevGoals\n      };\n      let target = newGoals[currentCategory];\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]] = {\n              ...target.quarterly[indices[0]],\n              completed: !target.quarterly[indices[0]].completed\n            };\n          }\n          break;\n        case 'monthly':\n          if ((_target$quarterly$ind = target.quarterly[indices[0]]) !== null && _target$quarterly$ind !== void 0 && _target$quarterly$ind.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].completed\n            };\n          }\n          break;\n        case 'weekly':\n          if ((_target$quarterly$ind2 = target.quarterly[indices[0]]) !== null && _target$quarterly$ind2 !== void 0 && (_target$quarterly$ind3 = _target$quarterly$ind2.monthly[indices[1]]) !== null && _target$quarterly$ind3 !== void 0 && _target$quarterly$ind3.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed\n            };\n          }\n          break;\n        case 'daily':\n          if ((_target$quarterly$ind4 = target.quarterly[indices[0]]) !== null && _target$quarterly$ind4 !== void 0 && (_target$quarterly$ind5 = _target$quarterly$ind4.monthly[indices[1]]) !== null && _target$quarterly$ind5 !== void 0 && (_target$quarterly$ind6 = _target$quarterly$ind5.weekly[indices[2]]) !== null && _target$quarterly$ind6 !== void 0 && _target$quarterly$ind6.dailyGoals[indices[3]][indices[4]]) {\n            const currentGoal = target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].dailyGoals[indices[3]][indices[4]];\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].dailyGoals[indices[3]][indices[4]] = {\n              ...currentGoal,\n              completed: !currentGoal.completed\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory, setGoals]);\n  const memoizedComponents = useMemo(() => {\n    var _goals$currentCategor, _goals$currentCategor2, _goals$currentCategor3, _goals$currentCategor4, _goals$currentCategor5, _goals$currentCategor6, _goals$currentCategor7;\n    return {\n      categories: /*#__PURE__*/_jsxDEV(Categories, {\n        categories: categories,\n        currentCategory: currentCategory,\n        setCurrentCategory: setCurrentCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this),\n      annualGoal: /*#__PURE__*/_jsxDEV(AnnualGoal, {\n        annualGoal: ((_goals$currentCategor = goals[currentCategory]) === null || _goals$currentCategor === void 0 ? void 0 : _goals$currentCategor.annual) || '',\n        updateGoal: value => updateGoal('annual', null, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this),\n      quarterlyGoals: /*#__PURE__*/_jsxDEV(QuarterlyGoals, {\n        goals: ((_goals$currentCategor2 = goals[currentCategory]) === null || _goals$currentCategor2 === void 0 ? void 0 : _goals$currentCategor2.quarterly) || [],\n        updateGoal: (index, value) => updateGoal('quarterly', index, value),\n        toggleCompletion: index => toggleCompletion('quarterly', [index]),\n        selectedQuarter: selectedQuarter,\n        setSelectedQuarter: setSelectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this),\n      monthlyGoals: selectedQuarter !== null && /*#__PURE__*/_jsxDEV(MonthlyGoals, {\n        goals: ((_goals$currentCategor3 = goals[currentCategory]) === null || _goals$currentCategor3 === void 0 ? void 0 : (_goals$currentCategor4 = _goals$currentCategor3.quarterly[selectedQuarter]) === null || _goals$currentCategor4 === void 0 ? void 0 : _goals$currentCategor4.monthly) || [],\n        updateGoal: (index, value) => updateGoal('monthly', index, value),\n        toggleCompletion: index => toggleCompletion('monthly', [selectedQuarter, index]),\n        selectedMonth: selectedMonth,\n        setSelectedMonth: setSelectedMonth,\n        selectedQuarter: selectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this),\n      weeklyGoals: selectedQuarter !== null && selectedMonth !== null && /*#__PURE__*/_jsxDEV(WeeklyGoals, {\n        weeklyGoals: ((_goals$currentCategor5 = goals[currentCategory]) === null || _goals$currentCategor5 === void 0 ? void 0 : (_goals$currentCategor6 = _goals$currentCategor5.quarterly[selectedQuarter]) === null || _goals$currentCategor6 === void 0 ? void 0 : (_goals$currentCategor7 = _goals$currentCategor6.monthly[selectedMonth]) === null || _goals$currentCategor7 === void 0 ? void 0 : _goals$currentCategor7.weekly) || [],\n        updateGoal: (index, value) => updateGoal('weekly', index, value),\n        toggleCompletion: index => toggleCompletion('weekly', [selectedQuarter, selectedMonth, index]),\n        selectedWeek: selectedWeek,\n        setSelectedWeek: setSelectedWeek,\n        selectedQuarter: selectedQuarter,\n        selectedMonth: selectedMonth,\n        updateDailyGoal: (weekIndex, dayIndex, goalIndex, value) => updateGoal('daily', weekIndex, value, dayIndex, goalIndex),\n        toggleDailyGoalCompletion: (weekIndex, dayIndex, goalIndex) => toggleCompletion('daily', [selectedQuarter, selectedMonth, weekIndex, dayIndex, goalIndex])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this),\n      dailyGoals: /*#__PURE__*/_jsxDEV(DailyGoals, {\n        goals: dailyGoals,\n        setGoals: setDailyGoals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this),\n      workTimer: /*#__PURE__*/_jsxDEV(WorkTimer, {\n        remainingTime: remainingTime,\n        setRemainingTime: setRemainingTime,\n        selectedDuration: selectedDuration,\n        setSelectedDuration: setSelectedDuration,\n        isTimerRunning: isTimerRunning,\n        setIsTimerRunning: setIsTimerRunning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this)\n    };\n  }, [goals, currentCategory, updateGoal, toggleCompletion, selectedQuarter, selectedMonth, selectedWeek, dailyGoals, setDailyGoals, remainingTime, setRemainingTime, selectedDuration, setSelectedDuration, isTimerRunning, setIsTimerRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"OKR Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        className: \"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\",\n        children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), memoizedComponents.categories, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [memoizedComponents.annualGoal, memoizedComponents.quarterlyGoals, memoizedComponents.monthlyGoals, memoizedComponents.weeklyGoals, memoizedComponents.dailyGoals]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), memoizedComponents.workTimer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9DWLzIZOLKH/mDZcK6U97spcQnE=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useDarkMode];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Categories","AnnualGoal","QuarterlyGoals","MonthlyGoals","WeeklyGoals","DailyGoals","WorkTimer","categories","loadGoals","saveGoals","initializeGoals","useLocalStorage","useDarkMode","jsxDEV","_jsxDEV","App","_s","goals","setGoals","currentCategory","setCurrentCategory","selectedQuarter","setSelectedQuarter","selectedMonth","setSelectedMonth","selectedWeek","setSelectedWeek","dailyGoals","setDailyGoals","Array","fill","remainingTime","setRemainingTime","selectedDuration","setSelectedDuration","isTimerRunning","setIsTimerRunning","darkMode","toggleDarkMode","loadedGoals","updateGoal","level","index","value","dayIndex","goalIndex","prevGoals","_target$quarterly$sel","_target$quarterly$sel2","_target$quarterly$sel3","_target$quarterly$sel4","_target$quarterly$sel5","_target$quarterly$sel6","newGoals","target","console","error","annual","quarterly","goal","monthly","weekly","toggleCompletion","indices","_target$quarterly$ind","_target$quarterly$ind2","_target$quarterly$ind3","_target$quarterly$ind4","_target$quarterly$ind5","_target$quarterly$ind6","completed","currentGoal","memoizedComponents","_goals$currentCategor","_goals$currentCategor2","_goals$currentCategor3","_goals$currentCategor4","_goals$currentCategor5","_goals$currentCategor6","_goals$currentCategor7","fileName","_jsxFileName","lineNumber","columnNumber","annualGoal","quarterlyGoals","monthlyGoals","weeklyGoals","updateDailyGoal","weekIndex","toggleDailyGoalCompletion","workTimer","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/georgegray/Coding Projects/okr-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals, initializeGoals } from './utils/goalUtils';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport useDarkMode from './hooks/useDarkMode';\n\nconst App = () => {\n  const [goals, setGoals] = useLocalStorage('goals', initializeGoals());\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useLocalStorage('dailyGoals', Array(14).fill(''));\n  \n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  const [darkMode, toggleDarkMode] = useDarkMode();\n\n  useEffect(() => {\n    const loadedGoals = loadGoals();\n    setGoals(loadedGoals);\n  }, [setGoals]);\n\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n\n  const updateGoal = useCallback((level, index, value, dayIndex, goalIndex) => {\n    setGoals(prevGoals => {\n      const newGoals = { ...prevGoals };\n      let target = newGoals[currentCategory];\n\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index] = { ...target.quarterly[index], goal: value };\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && target.quarterly[selectedQuarter]?.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && \n              target.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'daily':\n          if (selectedQuarter !== null && selectedMonth !== null && selectedWeek !== null &&\n              target.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly[selectedWeek]?.dailyGoals[dayIndex]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[selectedWeek].dailyGoals[dayIndex][goalIndex] = value;\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth, selectedWeek, setGoals]);\n\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      const newGoals = { ...prevGoals };\n      let target = newGoals[currentCategory];\n\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]] = {\n              ...target.quarterly[indices[0]],\n              completed: !target.quarterly[indices[0]].completed\n            };\n          }\n          break;\n        case 'monthly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].completed\n            };\n          }\n          break;\n        case 'weekly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]?.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed\n            };\n          }\n          break;\n        case 'daily':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]?.weekly[indices[2]]?.dailyGoals[indices[3]][indices[4]]) {\n            const currentGoal = target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].dailyGoals[indices[3]][indices[4]];\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].dailyGoals[indices[3]][indices[4]] = {\n              ...currentGoal,\n              completed: !currentGoal.completed\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory, setGoals]);\n\n  const memoizedComponents = useMemo(() => ({\n    categories: (\n      <Categories\n        categories={categories}\n        currentCategory={currentCategory}\n        setCurrentCategory={setCurrentCategory}\n      />\n    ),\n    annualGoal: (\n      <AnnualGoal\n        annualGoal={goals[currentCategory]?.annual || ''}\n        updateGoal={(value) => updateGoal('annual', null, value)}\n      />\n    ),\n    quarterlyGoals: (\n      <QuarterlyGoals\n        goals={goals[currentCategory]?.quarterly || []}\n        updateGoal={(index, value) => updateGoal('quarterly', index, value)}\n        toggleCompletion={(index) => toggleCompletion('quarterly', [index])}\n        selectedQuarter={selectedQuarter}\n        setSelectedQuarter={setSelectedQuarter}\n      />\n    ),\n    monthlyGoals: selectedQuarter !== null && (\n      <MonthlyGoals\n        goals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly || []}\n        updateGoal={(index, value) => updateGoal('monthly', index, value)}\n        toggleCompletion={(index) => toggleCompletion('monthly', [selectedQuarter, index])}\n        selectedMonth={selectedMonth}\n        setSelectedMonth={setSelectedMonth}\n        selectedQuarter={selectedQuarter}\n      />\n    ),\n    weeklyGoals: selectedQuarter !== null && selectedMonth !== null && (\n      <WeeklyGoals\n        weeklyGoals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly || []}\n        updateGoal={(index, value) => updateGoal('weekly', index, value)}\n        toggleCompletion={(index) => toggleCompletion('weekly', [selectedQuarter, selectedMonth, index])}\n        selectedWeek={selectedWeek}\n        setSelectedWeek={setSelectedWeek}\n        selectedQuarter={selectedQuarter}\n        selectedMonth={selectedMonth}\n        updateDailyGoal={(weekIndex, dayIndex, goalIndex, value) => \n          updateGoal('daily', weekIndex, value, dayIndex, goalIndex)}\n        toggleDailyGoalCompletion={(weekIndex, dayIndex, goalIndex) => \n          toggleCompletion('daily', [selectedQuarter, selectedMonth, weekIndex, dayIndex, goalIndex])}\n      />\n    ),\n    dailyGoals: (\n      <DailyGoals\n        goals={dailyGoals}\n        setGoals={setDailyGoals}\n      />\n    ),\n    workTimer: (\n      <WorkTimer\n        remainingTime={remainingTime}\n        setRemainingTime={setRemainingTime}\n        selectedDuration={selectedDuration}\n        setSelectedDuration={setSelectedDuration}\n        isTimerRunning={isTimerRunning}\n        setIsTimerRunning={setIsTimerRunning}\n      />\n    )\n  }), [\n    goals, currentCategory, updateGoal, toggleCompletion,\n    selectedQuarter, selectedMonth, selectedWeek,\n    dailyGoals, setDailyGoals,\n    remainingTime, setRemainingTime,\n    selectedDuration, setSelectedDuration,\n    isTimerRunning, setIsTimerRunning\n  ]);\n\n  return (\n    <div className={`container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-3xl font-bold\">OKR Tracker</h1>\n        <button\n          onClick={toggleDarkMode}\n          className=\"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\"\n        >\n          {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\n        </button>\n      </div>\n      \n      {memoizedComponents.categories}\n      \n      <div className=\"mt-4\">\n        {memoizedComponents.annualGoal}\n        {memoizedComponents.quarterlyGoals}\n        {memoizedComponents.monthlyGoals}\n        {memoizedComponents.weeklyGoals}\n        {memoizedComponents.dailyGoals}\n      </div>\n\n      {memoizedComponents.workTimer}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}