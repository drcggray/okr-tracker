{"ast":null,"code":"var _jsxFileName = \"/Users/georgegray/Coding Projects/okr-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals } from './utils/goalUtils';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport useDarkMode from './hooks/useDarkMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [goals, setGoals] = useLocalStorage('goals', loadGoals());\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useLocalStorage('dailyGoals', Array(14).fill(''));\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [darkMode, toggleDarkMode] = useDarkMode();\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n  const updateGoal = useCallback((level, index, value) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$sel, _target$quarterly$sel2, _target$quarterly$sel3;\n      const newGoals = {\n        ...prevGoals\n      };\n      let target = newGoals[currentCategory];\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index] = {\n              ...target.quarterly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && (_target$quarterly$sel = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel !== void 0 && _target$quarterly$sel.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && (_target$quarterly$sel2 = target.quarterly[selectedQuarter]) !== null && _target$quarterly$sel2 !== void 0 && (_target$quarterly$sel3 = _target$quarterly$sel2.monthly[selectedMonth]) !== null && _target$quarterly$sel3 !== void 0 && _target$quarterly$sel3.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index],\n              goal: value\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth, setGoals]);\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      var _target$quarterly$ind, _target$quarterly$ind2, _target$quarterly$ind3;\n      const newGoals = {\n        ...prevGoals\n      };\n      let target = newGoals[currentCategory];\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]] = {\n              ...target.quarterly[indices[0]],\n              completed: !target.quarterly[indices[0]].completed\n            };\n          }\n          break;\n        case 'monthly':\n          if ((_target$quarterly$ind = target.quarterly[indices[0]]) !== null && _target$quarterly$ind !== void 0 && _target$quarterly$ind.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].completed\n            };\n          }\n          break;\n        case 'weekly':\n          if ((_target$quarterly$ind2 = target.quarterly[indices[0]]) !== null && _target$quarterly$ind2 !== void 0 && (_target$quarterly$ind3 = _target$quarterly$ind2.monthly[indices[1]]) !== null && _target$quarterly$ind3 !== void 0 && _target$quarterly$ind3.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n      return newGoals;\n    });\n  }, [currentCategory, setGoals]);\n  const updateDailyGoal = useCallback((index, value) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = value;\n      return newGoals;\n    });\n  }, [setDailyGoals]);\n  const toggleDailyGoalCompletion = useCallback(index => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = newGoals[index].startsWith('✓ ') ? newGoals[index].slice(2) : '✓ ' + newGoals[index];\n      return newGoals;\n    });\n  }, [setDailyGoals]);\n  const clearDailyGoals = useCallback(() => {\n    setDailyGoals(Array(14).fill(''));\n  }, [setDailyGoals]);\n  const startTimer = useCallback(() => {\n    setIsTimerRunning(true);\n    setRemainingTime(selectedDuration * 60);\n  }, [selectedDuration]);\n  useEffect(() => {\n    let timer;\n    if (isTimerRunning && remainingTime > 0) {\n      timer = setInterval(() => {\n        setRemainingTime(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setIsTimerRunning(false);\n            alert(\"Time's up!\");\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    } else if (remainingTime === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [isTimerRunning, remainingTime]);\n  const memoizedComponents = useMemo(() => {\n    var _goals$currentCategor, _goals$currentCategor2, _goals$currentCategor3, _goals$currentCategor4, _goals$currentCategor5, _goals$currentCategor6, _goals$currentCategor7;\n    return {\n      categories: /*#__PURE__*/_jsxDEV(Categories, {\n        categories: categories,\n        currentCategory: currentCategory,\n        setCurrentCategory: setCurrentCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this),\n      annualGoal: /*#__PURE__*/_jsxDEV(AnnualGoal, {\n        annualGoal: (_goals$currentCategor = goals[currentCategory]) === null || _goals$currentCategor === void 0 ? void 0 : _goals$currentCategor.annual,\n        updateGoal: updateGoal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this),\n      quarterlyGoals: /*#__PURE__*/_jsxDEV(QuarterlyGoals, {\n        quarterlyGoals: (_goals$currentCategor2 = goals[currentCategory]) === null || _goals$currentCategor2 === void 0 ? void 0 : _goals$currentCategor2.quarterly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedQuarter: setSelectedQuarter,\n        selectedQuarter: selectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this),\n      monthlyGoals: selectedQuarter !== null && /*#__PURE__*/_jsxDEV(MonthlyGoals, {\n        monthlyGoals: (_goals$currentCategor3 = goals[currentCategory]) === null || _goals$currentCategor3 === void 0 ? void 0 : (_goals$currentCategor4 = _goals$currentCategor3.quarterly[selectedQuarter]) === null || _goals$currentCategor4 === void 0 ? void 0 : _goals$currentCategor4.monthly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedMonth: setSelectedMonth,\n        selectedMonth: selectedMonth,\n        selectedQuarter: selectedQuarter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this),\n      weeklyGoals: selectedQuarter !== null && selectedMonth !== null && /*#__PURE__*/_jsxDEV(WeeklyGoals, {\n        weeklyGoals: (_goals$currentCategor5 = goals[currentCategory]) === null || _goals$currentCategor5 === void 0 ? void 0 : (_goals$currentCategor6 = _goals$currentCategor5.quarterly[selectedQuarter]) === null || _goals$currentCategor6 === void 0 ? void 0 : (_goals$currentCategor7 = _goals$currentCategor6.monthly[selectedMonth]) === null || _goals$currentCategor7 === void 0 ? void 0 : _goals$currentCategor7.weekly,\n        updateGoal: updateGoal,\n        toggleCompletion: toggleCompletion,\n        setSelectedWeek: setSelectedWeek,\n        selectedWeek: selectedWeek,\n        selectedQuarter: selectedQuarter,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this),\n      dailyGoals: /*#__PURE__*/_jsxDEV(DailyGoals, {\n        dailyGoals: dailyGoals,\n        updateDailyGoal: updateDailyGoal,\n        toggleDailyGoalCompletion: toggleDailyGoalCompletion,\n        clearDailyGoals: clearDailyGoals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this),\n      workTimer: /*#__PURE__*/_jsxDEV(WorkTimer, {\n        selectedDuration: selectedDuration,\n        setSelectedDuration: setSelectedDuration,\n        startTimer: startTimer,\n        isTimerRunning: isTimerRunning,\n        remainingTime: remainingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this)\n    };\n  }, [goals, currentCategory, selectedQuarter, selectedMonth, selectedWeek, dailyGoals, updateGoal, toggleCompletion, updateDailyGoal, toggleDailyGoalCompletion, clearDailyGoals, selectedDuration, startTimer, isTimerRunning, remainingTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"OKR Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        className: \"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\",\n        children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), memoizedComponents.categories, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [memoizedComponents.annualGoal, memoizedComponents.quarterlyGoals, memoizedComponents.monthlyGoals, memoizedComponents.weeklyGoals, memoizedComponents.dailyGoals]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), memoizedComponents.workTimer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TToF7sKWSaUyRXPIGNDgvOv+JTU=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useDarkMode];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Categories","AnnualGoal","QuarterlyGoals","MonthlyGoals","WeeklyGoals","DailyGoals","WorkTimer","categories","loadGoals","saveGoals","useLocalStorage","useDarkMode","jsxDEV","_jsxDEV","App","_s","goals","setGoals","currentCategory","setCurrentCategory","selectedQuarter","setSelectedQuarter","selectedMonth","setSelectedMonth","selectedWeek","setSelectedWeek","dailyGoals","setDailyGoals","Array","fill","remainingTime","setRemainingTime","selectedDuration","setSelectedDuration","isTimerRunning","setIsTimerRunning","darkMode","toggleDarkMode","updateGoal","level","index","value","prevGoals","_target$quarterly$sel","_target$quarterly$sel2","_target$quarterly$sel3","newGoals","target","console","error","annual","quarterly","goal","monthly","weekly","toggleCompletion","indices","_target$quarterly$ind","_target$quarterly$ind2","_target$quarterly$ind3","completed","updateDailyGoal","prev","toggleDailyGoalCompletion","startsWith","slice","clearDailyGoals","startTimer","timer","setInterval","prevTime","clearInterval","alert","memoizedComponents","_goals$currentCategor","_goals$currentCategor2","_goals$currentCategor3","_goals$currentCategor4","_goals$currentCategor5","_goals$currentCategor6","_goals$currentCategor7","fileName","_jsxFileName","lineNumber","columnNumber","annualGoal","quarterlyGoals","monthlyGoals","weeklyGoals","workTimer","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/georgegray/Coding Projects/okr-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Categories from './components/Categories';\nimport AnnualGoal from './components/AnnualGoal';\nimport QuarterlyGoals from './components/QuarterlyGoals';\nimport MonthlyGoals from './components/MonthlyGoals';\nimport WeeklyGoals from './components/WeeklyGoals';\nimport DailyGoals from './components/DailyGoals';\nimport WorkTimer from './components/WorkTimer';\nimport { categories, loadGoals, saveGoals } from './utils/goalUtils';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport useDarkMode from './hooks/useDarkMode';\n\nconst App = () => {\n  const [goals, setGoals] = useLocalStorage('goals', loadGoals());\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [dailyGoals, setDailyGoals] = useLocalStorage('dailyGoals', Array(14).fill(''));\n  \n  const [remainingTime, setRemainingTime] = useState(0);\n  const [selectedDuration, setSelectedDuration] = useState(15);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  const [darkMode, toggleDarkMode] = useDarkMode();\n\n  useEffect(() => {\n    saveGoals(goals);\n  }, [goals]);\n\n  const updateGoal = useCallback((level, index, value) => {\n    setGoals(prevGoals => {\n      const newGoals = { ...prevGoals };\n      let target = newGoals[currentCategory];\n\n      if (!target) {\n        console.error(`Category ${currentCategory} not found in goals`);\n        return prevGoals;\n      }\n\n      switch (level) {\n        case 'annual':\n          target.annual = value;\n          break;\n        case 'quarterly':\n          if (target.quarterly[index]) {\n            target.quarterly[index] = { ...target.quarterly[index], goal: value };\n          }\n          break;\n        case 'monthly':\n          if (selectedQuarter !== null && target.quarterly[selectedQuarter]?.monthly[index]) {\n            target.quarterly[selectedQuarter].monthly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[index],\n              goal: value\n            };\n          }\n          break;\n        case 'weekly':\n          if (selectedQuarter !== null && selectedMonth !== null && \n              target.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly[index]) {\n            target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index] = {\n              ...target.quarterly[selectedQuarter].monthly[selectedMonth].weekly[index],\n              goal: value\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory, selectedQuarter, selectedMonth, setGoals]);\n\n  const toggleCompletion = useCallback((level, indices) => {\n    setGoals(prevGoals => {\n      const newGoals = { ...prevGoals };\n      let target = newGoals[currentCategory];\n\n      switch (level) {\n        case 'quarterly':\n          if (target.quarterly[indices[0]]) {\n            target.quarterly[indices[0]] = {\n              ...target.quarterly[indices[0]],\n              completed: !target.quarterly[indices[0]].completed\n            };\n          }\n          break;\n        case 'monthly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]) {\n            target.quarterly[indices[0]].monthly[indices[1]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].completed\n            };\n          }\n          break;\n        case 'weekly':\n          if (target.quarterly[indices[0]]?.monthly[indices[1]]?.weekly[indices[2]]) {\n            target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]] = {\n              ...target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]],\n              completed: !target.quarterly[indices[0]].monthly[indices[1]].weekly[indices[2]].completed\n            };\n          }\n          break;\n        default:\n          console.error(`Unknown level: ${level}`);\n          return prevGoals;\n      }\n\n      return newGoals;\n    });\n  }, [currentCategory, setGoals]);\n\n  const updateDailyGoal = useCallback((index, value) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = value;\n      return newGoals;\n    });\n  }, [setDailyGoals]);\n\n  const toggleDailyGoalCompletion = useCallback((index) => {\n    setDailyGoals(prev => {\n      const newGoals = [...prev];\n      newGoals[index] = newGoals[index].startsWith('✓ ') ? newGoals[index].slice(2) : '✓ ' + newGoals[index];\n      return newGoals;\n    });\n  }, [setDailyGoals]);\n\n  const clearDailyGoals = useCallback(() => {\n    setDailyGoals(Array(14).fill(''));\n  }, [setDailyGoals]);\n\n  const startTimer = useCallback(() => {\n    setIsTimerRunning(true);\n    setRemainingTime(selectedDuration * 60);\n  }, [selectedDuration]);\n\n  useEffect(() => {\n    let timer;\n    if (isTimerRunning && remainingTime > 0) {\n      timer = setInterval(() => {\n        setRemainingTime(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setIsTimerRunning(false);\n            alert(\"Time's up!\");\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    } else if (remainingTime === 0) {\n      setIsTimerRunning(false);\n    }\n\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [isTimerRunning, remainingTime]);\n\n  const memoizedComponents = useMemo(() => ({\n    categories: (\n      <Categories\n        categories={categories}\n        currentCategory={currentCategory}\n        setCurrentCategory={setCurrentCategory}\n      />\n    ),\n    annualGoal: (\n      <AnnualGoal\n        annualGoal={goals[currentCategory]?.annual}\n        updateGoal={updateGoal}\n      />\n    ),\n    quarterlyGoals: (\n      <QuarterlyGoals\n        quarterlyGoals={goals[currentCategory]?.quarterly}\n        updateGoal={updateGoal}\n        toggleCompletion={toggleCompletion}\n        setSelectedQuarter={setSelectedQuarter}\n        selectedQuarter={selectedQuarter}\n      />\n    ),\n    monthlyGoals: selectedQuarter !== null && (\n      <MonthlyGoals\n        monthlyGoals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly}\n        updateGoal={updateGoal}\n        toggleCompletion={toggleCompletion}\n        setSelectedMonth={setSelectedMonth}\n        selectedMonth={selectedMonth}\n        selectedQuarter={selectedQuarter}\n      />\n    ),\n    weeklyGoals: selectedQuarter !== null && selectedMonth !== null && (\n      <WeeklyGoals\n        weeklyGoals={goals[currentCategory]?.quarterly[selectedQuarter]?.monthly[selectedMonth]?.weekly}\n        updateGoal={updateGoal}\n        toggleCompletion={toggleCompletion}\n        setSelectedWeek={setSelectedWeek}\n        selectedWeek={selectedWeek}\n        selectedQuarter={selectedQuarter}\n        selectedMonth={selectedMonth}\n      />\n    ),\n    dailyGoals: (\n      <DailyGoals\n        dailyGoals={dailyGoals}\n        updateDailyGoal={updateDailyGoal}\n        toggleDailyGoalCompletion={toggleDailyGoalCompletion}\n        clearDailyGoals={clearDailyGoals}\n      />\n    ),\n    workTimer: (\n      <WorkTimer\n        selectedDuration={selectedDuration}\n        setSelectedDuration={setSelectedDuration}\n        startTimer={startTimer}\n        isTimerRunning={isTimerRunning}\n        remainingTime={remainingTime}\n      />\n    )\n  }), [goals, currentCategory, selectedQuarter, selectedMonth, selectedWeek, dailyGoals, updateGoal, toggleCompletion, updateDailyGoal, toggleDailyGoalCompletion, clearDailyGoals, selectedDuration, startTimer, isTimerRunning, remainingTime]);\n\n  return (\n    <div className={`container mx-auto p-4 ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-3xl font-bold\">OKR Tracker</h1>\n        <button\n          onClick={toggleDarkMode}\n          className=\"px-4 py-2 bg-gray-200 dark:bg-gray-600 rounded-md\"\n        >\n          {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\n        </button>\n      </div>\n      \n      {memoizedComponents.categories}\n      \n      <div className=\"mt-4\">\n        {memoizedComponents.annualGoal}\n        {memoizedComponents.quarterlyGoals}\n        {memoizedComponents.monthlyGoals}\n        {memoizedComponents.weeklyGoals}\n        {memoizedComponents.dailyGoals}\n      </div>\n\n      {memoizedComponents.workTimer}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}